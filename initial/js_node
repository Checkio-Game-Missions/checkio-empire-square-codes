"use strict";

function countSquares() {
    var lines = arguments;
    return 1;
}


var assert = require("assert");

if (!global.is_checking) {
    // Rank 1
    assert.equal(countSquares([1, 2], [3, 4], [1, 5], [2, 6], [4, 8], [5, 6], [6, 7], [7, 8],
            [6, 10], [7, 11], [8, 12], [10, 11], [10, 14], [12, 16], [14, 15], [15, 16]),
        3, "First, from description");
    assert.equal(countSquares([1, 2], [2, 3], [3, 4], [1, 5], [4, 8], [6, 7], [5, 9], [6, 10],
            [7, 11], [8, 12], [9, 13], [10, 11], [12, 16], [13, 14], [14, 15], [15, 16]),
        2, "Second, from description");
    assert.equal(countSquares([1, 2], [1, 5], [2, 6], [5, 6]),
        1, "Third, one small square");
    assert.equal(countSquares([1, 2], [1, 5], [2, 6], [5, 9], [6, 10], [9, 10]),
        0, "Fourth, it's not square");
    assert.equal(countSquares([16, 15], [16, 12], [15, 11], [11, 10],
            [10, 14], [14, 13], [13, 9]),
        0, "Fifth, snake");

    // Rank 2
    assert.equal(countSquares([1, 2], [2, 7], [7, 6], [6, 1], [25, 24],
            [24, 19], [19, 20], [20, 25]),
        2, "25");
    // Rank 3
    assert.equal(countSquares([1, 2], [2, 7], [7, 6], [6, 1], [25, 24], [24, 19], [19, 20], [20, 25],
            [6, 11], [0, 19], [10, 0], [11, 16], [16, 21], [21, 22], [22, 23],
            [23, 24], [20, 15], [15, 10], [10, 5], [5, 4], [4, 3], [3, 2]),
        2, "With zeroes");
    console.log("All done? Earn rewards by using the 'Check' button!");
}
